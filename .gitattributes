from datetime import datetime
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, ConversationHandler
from telegram import KeyboardButton, ReplyKeyboardMarkup


TOKEN = '5338479753:AAFzPCrocDj05i_nAAnU5JVMpmVj61LiUjc'
print("Bot started")
updater = Updater(TOKEN)


def start(update, context):
    chat = update.effective_chat
    buttons = [[KeyboardButton('make a note')]]
    context.bot.send_message(chat_id=chat.id, text="""Hi there! 
    \nI can show you chenges of currency rate during the year.
    \n let's start!""", reply_markup=ReplyKeyboardMarkup(buttons))
    return 1
    

def cancel(update):
    update.message.reply_text(
        'Name Conversation cancelled by user. Bye. Send /set_name to start again')
    return ConversationHandler.END


def date_and_time():
    current_date = datetime.now.strftime("%m.%d.%Y")
    return current_date


def saver(new_note):
    try:
        with open("notes.txt", 'r') as f:
            data = str(f.read())
        with open("notes.txt", 'w') as f:
            f.write(data + "\n"+"-"+str(new_note))
    except FileNotFoundError:
        with open("notes.txt", 'w') as f:
            f.write("-"+str(new_note))
                   

def addnote(update, context):
    chat = update.effective_chat
    context.bot.send_message(chat_id=chat.id, text="""
    okay, write down a note!)""")
    new_note = str(context.user_data)
    saver(new_note) 
    context.bot.send_message(chat_id=chat.id, text="""
    well done!""")
    return ConversationHandler.END


handler = ConversationHandler(
    entry_points=[CommandHandler('start', start)],
    states={
            1: [MessageHandler(Filters.text, addnote)],
    },
    fallbacks=[CommandHandler('cancel', cancel)]
)


disp = updater.dispatcher
disp.add_handler(handler)
updater.start_polling()
updater.idle()
